pipeline {
    agent any

    tools {
        jdk 'jdk21'
        maven 'maven3'
    }

    environment {
        SONAR_SCANNER = tool 'sonar-scanner'
        REGISTRY = '095958683694.dkr.ecr.us-east-1.amazonaws.com/tron2k/boardgame'
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', credentialsId: 'GitHubToke', url: 'https://github.com/VarunKilledar/Boardgame'
            }
        }

        stage('Compilation') {
            steps {
                sh 'mvn compile'
            }
        }

        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }

        stage('File Scanning with Trivy') {
            steps {
                sh 'trivy fs --format table -o trivy-fs-report.html .'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar-scanner') {
                    sh '''${SONAR_SCANNER}/bin/sonar-scanner \
                          -Dsonar.projectKey=BoardGame \
                          -Dsonar.sources=. \
                          -Dsonar.java.binaries=target \
                          -Dsonar.host.url=http://44.195.0.17:9000 \
                          -Dsonar.login=sqp_8337b09d5c9a4519abaf53687fad867db71d87bc'''
                }
            }
        }

        stage('Quality Gate') {
            steps {
                waitForQualityGate abortPipeline: true
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("${REGISTRY}:latest")
                }
            }
        }

        stage('Push to ECR') {
            steps {
                sh '''
                    aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${REGISTRY}
                    docker push ${REGISTRY}:latest
                '''
            }
        }
    }
}
